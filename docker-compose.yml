version: '2.2'

services:
  kong-database:
    image: postgres:9.5-alpine
    container_name: kong-database
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    healthcheck:
      test: "pg_isready -U kong && psql -d kong -U kong -c \"SELECT 1=1\""
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 8204:5432
    networks:
      - kong-net
  kong-migration:
    image: kong:latest
    container_name: kong-migration
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    command: sh -c "kong migrations up && touch migrations_run && sleep 30"
    healthcheck:
      test: "if [[ -f migrations_run ]] ; then exit 0; else exit 1; fi"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kong-net

  kong:
    image: kong:latest
    container_name: kong
    depends_on:
      kong-migration:
        condition: service_healthy
    links:
      - web-app
    healthcheck:
      test: "kong health"
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_LOG_LEVEL=debug
    ports:
      - 8200:8000
      - 8201:8001
    networks:
      - kong-net
  web-app:
    build: ./app
    command: npm start
    volumes:
      - ./app:/app
      - /app/node_modules
    ports:
      - 8202:3000
    networks:
      - kong-net
  kong-dashboard:
    image: pgbi/kong-dashboard
    command: "start --kong-url http://kong:8001"
    depends_on:
      - kong
    links:
      - kong
    ports:
      - 8203:8080
    networks:
      - kong-net
networks:
  kong-net: